---
import Layout from '@/layouts/main.astro';
import { animeSchema } from '@/lib/schemas/anime';
import { apiFetch } from '@/lib/services/fetch.service';

const id = Astro.params.slug;
if (!id) {
  return Astro.redirect('/');
}
async function getAnime(id: string) {
  const res = await (
    await apiFetch(`${import.meta.env.ANIME_API}/anime/${id}/full`)
  ).json();
  return animeSchema.safeParse(res.data);
}
const result = await getAnime(id);
if (!result.success) {
  return Astro.redirect('/');
}
---

<Layout title={result.data.titles[0]?.title || ''}>
  <div class="w-full m-6 text-black">
    <h1 class="font-bold text-zinc-300 text-3xl">{result.data.titles[0]?.title || ''}</h1>
    <div>
      <h3 class="font-bold text-zinc-300 text-lg">Streaming platforms</h3>
      <ul>
      </ul>
    </div>
    <div>
      <h3 class="font-bold text-zinc-300 text-lg">Openings</h3>
      <ul>
        {
          result.data.theme?.openings.map((opening) => {
            const url = new URL('https://www.youtube.com/results');
            url.searchParams.set(
              'search_query',
              opening.split?.(':')[1]?.split('(eps')[0] || '',
            );
            return (
              <li>
                <a target="_blank" href={url.href}>
                  {opening}
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</Layout>
