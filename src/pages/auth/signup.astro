---
import AuthLayout from "@/layouts/auth.astro";
import AuthButton from "@/components/auth-button.astro";
import AuthInput from "@/components/auth-input.astro";
import { auth } from "@/lib/db/lucia";
import { z } from "zod";

let emailInput = "";
let errorMessage = "";

// check for form submissions
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const emailResult = z.string().email().safeParse(formData.get("email"));
  if (!emailResult.success) {
    errorMessage = emailResult.error.message;
  }
  const passwordResult = z
    .string()
    .min(8, "Password must be minumim 8 characters long")
    .safeParse(formData.get("password"));
  if (!passwordResult.success && errorMessage) {
    errorMessage = "Invalid email and password";
  } else if (emailResult.success && passwordResult.success) {
    emailInput = emailResult.data;
    try {
      const user = await auth.createUser({
        key: {
          providerId: "email", // auth method
          providerUserId: emailResult.data.toLowerCase(), // unique id when using "username" auth method
          password: passwordResult.data, // hashed by Lucia
        },
        attributes: {
          email: emailResult.data,
        },
      });
      const session = await auth.createSession({
        userId: user.userId,
        attributes: {},
      });
      Astro.locals.auth.setSession(session);
      return Astro.redirect("/", 302);
    } catch (e) {
      // ERROR: FIX ME DADDY
      const PLEASE_CHECK_DATABASE_LIBRARY_ERROR_CLASS = true;
      if (PLEASE_CHECK_DATABASE_LIBRARY_ERROR_CLASS) {
        errorMessage = "Email already taken";
        Astro.response.status = 400;
      } else {
        console.error(e);
        errorMessage = "An unknown error occurred";
        Astro.response.status = 500;
      }
    }
  }
}

const session = await Astro.locals.auth.validate();
if (session) {
  return new Response(null, {
    status: 302,
    headers: {
      Location: "/",
    },
  });
}
---

<AuthLayout title="Sign up">
  <div class="max-w-[448px] w-full mx-auto rounded-[0.2rem] px-8 py-14 shadow-2xl bg-white">
    <h3>Acme Industries</h3>
    <h4>Sign in for!!!</h4>
    <div class="flex justify-center gap-x-2 border-b border-gray-100 pb-5 my-8">
      <a href="/auth/twitch/signin" class="px-[51px] py-2.5 rounded-sm bg-gray-50">
        <img src="/github.svg" />
      </a>
      <a href="/auth/github/signin" class="px-[51px] py-2.5 rounded-sm bg-gray-50">
        <img src="/github.svg" />
      </a>
      <a href="/auth/google/signin" class="px-[51px] py-2.5 rounded-sm bg-gray-50">
        <img src="/google.svg" />
      </a>
    </div>
    <form method="POST">
      <AuthInput
        required
        placeholder="Your email address"
        label="Email Address"
        id="email"
        name="email"
        type="email"
        value={emailInput}
      />
      <AuthInput
        required
        minlength="10"
        placeholder="Your password"
        label="Password"
        id="password"
        name="password"
        type="password"
      />
      <!--NOTE: we could also add a toaster/alert ?-->
      <div class="text-red-500 text-sm my-2">{errorMessage}</div>
      <AuthButton>Sign up</AuthButton>
      <div class="flex flex-col items-center gap-y-3 mt-4 text-[13px]">
        <a
          href="/auth/signin"
          class="text-neutral-700 underline hover:text-neutral-900"
          >Already have an account? Sign in</a
        >
      </div>
    </form>
  </div>
</AuthLayout>
