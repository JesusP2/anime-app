---
import { Image } from "astro:assets";
import Layout from "@/layouts/main.astro";
import type { Anime } from "@/lib/schemas/anime";
import Icon from "astro-icon";
// import AnimeCard from "../../components/anime-card.astro";

const url = new URL(Astro.request.url);
const search = url.searchParams.get("search");
const api_url = new URL(import.meta.env.ANIME_API + "/anime");
const { data } = (await (await fetch(api_url)).json()) as {
  data: Anime[];
};
const idxToMonth = [
  "JAN",
  "FEB",
  "MARCH",
  "APRIL",
  "MAY",
  "JUNE",
  "JULY",
  "AUG",
  "SEPT",
  "OCT",
  "NOV",
  "DEC",
];
---

<Layout title={search ?? ""}>
  <div>
    <p class="text-black text-lg mt-4 ml-10">Search results for "{search}"</p>
  </div>
  <div class="grid auto-fill-grid">
    {
      data.map((anime) => (
        <>
          <div class="w-72 mx-auto overflow-hidden rounded-md duration-300 shadow-lg hover:shadow-2xl my-4">
            <div class="h-40 overflow-hidden">
              <Image
                class="duration-200 hover:scale-150 object-cover"
                src={anime.images.jpg.large_image_url}
                width={290}
                height={50}
                alt="Shoes"
              />
            </div>
            <div class="px-6 pt-4 pb-8 text-black">
              <div class="flex text-gray-500 text-sm font-semibold">
                <p>
                  {idxToMonth.at(anime.aired.prop.from.month - 1)}
                  {anime.aired.prop.from.day}, {anime.aired.prop.from.year}
                  &nbsp;
                  <span class="font-bold">|</span>
                  &nbsp;
                  {anime.type === "TV" ? (
                    <>
                      <span class="font-semibold">Episodes:</span>{" "}
                      {anime.episodes}
                    </>
                  ) : (
                    anime.type
                  )}
                </p>
              </div>
              <h3 class="font-inter text-lg mt-3 mb-5">{anime.title}</h3>
              <p class="text-clip mb-3">{anime.synopsis}</p>

              <button class="text-blue-500 font-medium flex gap-x-1 items-center text-sm hover:bg-neutral-50 hover:text-blue-600 px-3 py-2 rounded-md relative right-3">
                Read more
                <Icon
                  pack="ri"
                  name="arrow-right-line"
                  class="w-4 relative top-[1px]"
                />
              </button>
            </div>
          </div>
        </>
      ))
    }
  </div>
</Layout>
<style>
  .text-clip {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .auto-fill-grid {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
</style>
