---
import Layout from '@/layouts/main.astro';
import AnimeCard from '@/components/anime-card.astro';
import Pagination from '@/components/pagination.astro';
import { type Anime } from '@/lib/schemas/anime';
import { type Manga } from '@/lib/schemas/manga';
import { type Character } from '@/lib/schemas/character';
import { createAnimeApiUrl } from '@/lib/parse-queries';
import { z } from 'zod';
import { paginationSchema } from '@/lib/schemas/pagination';

let errorType: string;
let data: {
  data: (Anime | Manga | Character)[];
  pagination: z.infer<typeof paginationSchema>;
} = {
  data: [],
  pagination: {
    current_page: 1,
    has_next_page: false,
    last_visible_page: 1,
    items: {
      count: 0,
      total: 0,
      per_page: 0,
    },
  },
};
const url = new URL(Astro.request.url);
const animeApiUrl = createAnimeApiUrl(url);
console.log(animeApiUrl.toString())

const res = await fetch(animeApiUrl);
if (!res.ok) {
  errorType = res.statusText;
} else {
  data = await res.json();
}

// const search = url.searchParams.get('search');
// const searchType = url.searchParams.get('type');
// const _page = url.searchParams.get('page') || '1';
// const page = isNaN(parseInt(_page || '')) ? 1 : parseInt(_page);
// const api_url = new URL(import.meta.env.ANIME_API + '/anime');
// api_url.searchParams.set('q', search ?? '');
// api_url.searchParams.set('page', page.toString() ?? '1');
// searchType && api_url.searchParams.set('type', searchType);
// const result = animeSchema.safeParse(await (await fetch(api_url)).json());
// if (!result.success) {
//   return Astro.redirect('/404');
// }
---

<Layout title={url.searchParams.get('q') ?? ''}>
  <div>
    <p class="text-black text-lg mt-4 ml-10">
      Search results for {url.searchParams.get('q')}
    </p>
  </div>
  <div class="grid auto-fill-grid">
    {
      data.data.length ? null : (
        <p class="text-black ml-10">Hello darkness my old friend...</p>
      )
    }
    {
      data.data.map((anime) => {
        if ('episodes' in anime) {
          return <AnimeCard anime={anime} />;
        }
      })
    }
  </div>
  <div class="text-black flex justify-center mt-10">
    <Pagination
      value={data.pagination.current_page}
      count={data.pagination.last_visible_page}
      url={url}
    />
  </div>
</Layout>
